#include "CFracao.h"
#include <iostream>
using namespace std;

CFracao CFracao::Reduzida(void) {
    int gcd = 1;
    int minimo = (m_numerador < m_denominador) ? m_numerador : m_denominador;
    for (int i = 1; i <= minimo; i++) {
        if ((m_numerador % i == 0) && (m_denominador % i == 0))
            gcd = i;
    }
    m_numerador /= gcd;
    m_denominador /= gcd;
    return (*this);
}

CFracao CFracao::operator+(const CFracao& f) {
    return CFracao(m_numerador * f.m_denominador + m_denominador * f.m_numerador,
                   m_denominador * f.m_denominador).Reduzida();
}

CFracao CFracao::operator-(const CFracao& f) {
    return CFracao(m_numerador * f.m_denominador - m_denominador * f.m_numerador,
                   m_denominador * f.m_denominador).Reduzida();
}

CFracao CFracao::operator*(const CFracao& f) {
    return CFracao(m_numerador * f.m_numerador, m_denominador * f.m_denominador).Reduzida();
}

CFracao CFracao::operator/(const CFracao& f) {
    return CFracao(m_numerador * f.m_denominador, m_denominador * f.m_numerador).Reduzida();
}

ostream& operator<<(ostream& os, const CFracao& f) {
    os << f.m_numerador << "/" << f.m_denominador;
    return os;
}

istream& operator>>(istream& is, CFracao& f) {
    cout << "Digite o numerador: ";
    is >> f.m_numerador;
    cout << "Digite o denominador: ";
    is >> f.m_denominador;

    while (f.m_denominador == 0) {
        cout << "Denominador nÃ£o pode ser zero. Digite novamente: ";
        is >> f.m_denominador;
    }

    return is;
}

int CFracao::MenorQue(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador <
            m_denominador * _Fracao.m_numerador);
}

int CFracao::MaiorQue(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador >
            m_denominador * _Fracao.m_numerador);
}

int CFracao::Igual(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador ==
            m_denominador * _Fracao.m_numerador);
}

float CFracao::ComoFloat(void) {
    return ((float)m_numerador / (float)m_denominador);
}

void CFracao::Print(void) {
    cout << m_numerador << "/" << m_denominador;
}
