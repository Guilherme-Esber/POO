#ifndef FRACAO_H
#define FRACAO_H

class Fracao {
private:
    int numerador, denominador;

public:
    Fracao(int n = 0, int d = 1);
    operator double() const;
};

#endif



#include "Fracao.h"

Fracao::Fracao(int n, int d) : numerador(n), denominador(d) {}

Fracao::operator double() const {
    return static_cast<double>(numerador) / denominador;
}



#ifndef COMPLEXO_H
#define COMPLEXO_H

class Complexo {
private:
    double real, imag;

public:
    Complexo(double r = 0, double i = 0);
    operator double() const;
};

#endif



#include "Complexo.h"
#include <cmath>

Complexo::Complexo(double r, double i) : real(r), imag(i) {}

Complexo::operator double() const {
    return sqrt(real * real + imag * imag);
}



#include <iostream>
#include "Fracao.h"
#include "Complexo.h"
using namespace std;

int main() {
    Fracao f(3, 4);
    Complexo c(3, 4);

    double valF = f;
    double valC = c;

    cout << "Fracao como double: " << valF << endl;
    cout << "Módulo do número complexo: " << valC << endl;

    return 0;
}
