a) Atributos e Métodos Acessíveis em DerivadaB:

    m_A1 (public) → Acessível como public

    F1Base(int) (public) → Acessível como public

    m_A2 (protected) → Acessível como protected

    F2Base(void) (protected) → Acessível como protected

    m_A3 (private) → Não acessível

    F1Base (private) → Não acessível

    m_B1 (public) → Acessível como public

    m_B2 (protected) → Acessível como protected

    F1DB(void) (protected) → Acessível como protected

    m_B3 (private) → Não acessível

    F2DB(void) (private) → Não acessível

b) Atributos e Métodos Acessíveis em DerivadaC:

    m_A1 (public) → Acessível como private

    F1Base(int) (public) → Acessível como private

    m_A2 (protected) → Acessível como private

    F2Base(void) (protected) → Acessível como private

    m_A3 (private) → Não acessível

    F1DC(void) (protected) → Acessível como protected

    m_C2 (protected) → Acessível como protected

    m_C3 (public) → Acessível como public

    F2DC(void) (public) → Acessível como public

c) Atributos e Métodos Acessíveis em DerivadaD (herdada publicamente de DerivadaC):

    m_C3 (public) → Acessível como public

    F2DC(void) (public) → Acessível como public

    m_C2 (protected) → Acessível como protected

    F1DC(void) (protected) → Acessível como protected

    m_A1 (public) → Não acessível diretamente (herdado como private em DerivadaC)

    F1Base(int) (public) → Não acessível diretamente (herdado como private em DerivadaC)

    m_A2 (protected) → Não acessível diretamente (herdado como private em DerivadaC)

    F2Base(void) (protected) → Não acessível diretamente (herdado como private em DerivadaC)
