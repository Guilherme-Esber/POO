// Arquivo CFracao.cpp - Implementação da classe CFracao
#include "CFracao.h"
#include <iostream>
using namespace std;

// Reduz fração
CFracao CFracao::Reduzida(void) {
    int gcd = 1;
    int minimo = (m_numerador < m_denominador) ? m_numerador : m_denominador;
    for (int i = 1; i <= minimo; i++) {
        if ((m_numerador % i == 0) && (m_denominador % i == 0))
            gcd = i;
    }
    m_numerador /= gcd;
    m_denominador /= gcd;
    return (*this);
}

// Soma
CFracao CFracao::Somar(CFracao _Fracao) {
    CFracao temp(m_numerador * _Fracao.m_denominador +
                 m_denominador * _Fracao.m_numerador,
                 m_denominador * _Fracao.m_denominador);
    return temp.Reduzida();
}

// Subtração
CFracao CFracao::Subtrair(CFracao _Fracao) {
    CFracao temp(m_numerador * _Fracao.m_denominador -
                 m_denominador * _Fracao.m_numerador,
                 m_denominador * _Fracao.m_denominador);
    return temp.Reduzida();
}

// Multiplicação
CFracao CFracao::Multiplicar(CFracao _Fracao) {
    CFracao temp(m_numerador * _Fracao.m_numerador,
                 m_denominador * _Fracao.m_denominador);
    return temp.Reduzida();
}

// Divisão
CFracao CFracao::Dividir(CFracao _Fracao) {
    CFracao temp(m_numerador * _Fracao.m_denominador,
                 m_denominador * _Fracao.m_numerador);
    return temp.Reduzida();
}

// Comparações
int CFracao::MenorQue(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador <
            m_denominador * _Fracao.m_numerador);
}

int CFracao::MaiorQue(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador >
            m_denominador * _Fracao.m_numerador);
}

int CFracao::Igual(CFracao _Fracao) {
    return (m_numerador * _Fracao.m_denominador ==
            m_denominador * _Fracao.m_numerador);
}

// Conversão
float CFracao::ComoFloat(void) {
    return ((float)m_numerador / (float)m_denominador);
}

// Impressão
void CFracao::Print(void) {
    cout << m_numerador << "/" << m_denominador;
}
