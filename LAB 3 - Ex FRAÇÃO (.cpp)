#include "CFracao.h"

// Função para calcular o GCD (Máximo Divisor Comum)
int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

CFracao::CFracao(int n, int d) : numerador(n), denominador(d) {
    if (denominador == 0) throw std::invalid_argument("Denominador não pode ser zero");
    simplificar();
}

void CFracao::simplificar() {
    int divisor = gcd(numerador, denominador);  // Agora usa a nossa função gcd
    numerador /= divisor;
    denominador /= divisor;
}

CFracao CFracao::operator+(const CFracao& outra) const {
    int num = numerador * outra.denominador + denominador * outra.numerador;
    int den = denominador * outra.denominador;
    return CFracao(num, den);
}

void CFracao::imprimir() const {
    std::cout << numerador << "/" << denominador << std::endl;
}
